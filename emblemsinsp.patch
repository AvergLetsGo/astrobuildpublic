From 53092526c5985ca6a8e12511970457688b96c6d5 Mon Sep 17 00:00:00 2001
From: spherallic <spherallic@gmail.com>
Date: Wed, 2 Mar 2022 23:47:15 +0100
Subject: [PATCH] Allow obtaining ring, time & grade emblems in regular SP
 gameplay.

---
 src/g_game.c |  6 +++++-
 src/m_cond.c | 39 +++++++++++++++++++++++++++++++++++++++
 src/m_cond.h |  1 +
 3 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/src/g_game.c b/src/g_game.c
index fa0900b02..ddcd5154f 100644
--- a/src/g_game.c
+++ b/src/g_game.c
@@ -1557,7 +1557,7 @@ void G_BuildTiccmd(ticcmd_t *cmd, INT32 realtics, UINT8 ssplayer)
 
 	if (player->bot == BOT_2PHUMAN)
 		cmd->angleturn = (INT16)((localangle - *myangle) >> 16);
-	
+
 	*myangle += (cmd->angleturn<<16);
 
 	if (controlstyle == CS_LMAOGALOG) {
@@ -3897,6 +3897,7 @@ static void G_DoCompleted(void)
 {
 	INT32 i;
 	boolean spec = G_IsSpecialStage(gamemap);
+	UINT8 earnedEmblems = 0;
 
 	tokenlist = 0; // Reset the list
 
@@ -4029,6 +4030,9 @@ static void G_DoCompleted(void)
 			nextmap = RandMap(G_TOLFlag(gametype), prevmap);
 	}
 
+	if (!(netgame || multiplayer) && !(modifiedgame && !savemoddata) && (earnedEmblems = M_CheckLevelEmblemsSP()))
+		CONS_Printf(M_GetText("\x82" "Earned %hu emblem%s for Record Attack records.\n"), (UINT16)earnedEmblems, earnedEmblems > 1 ? "s" : "");
+
 	// We are committed to this map now.
 	// We may as well allocate its header if it doesn't exist
 	// (That is, if it's a real map)
diff --git a/src/m_cond.c b/src/m_cond.c
index 85d732a48..42d8cab2c 100644
--- a/src/m_cond.c
+++ b/src/m_cond.c
@@ -20,6 +20,7 @@
 #include "g_game.h" // record info
 #include "r_skins.h" // numskins
 #include "r_draw.h" // R_GetColorByName
+#include "p_setup.h" // P_GetGrade
 
 // Map triggers for linedef executors
 // 32 triggers, one bit each
@@ -334,6 +335,44 @@ UINT8 M_CheckLevelEmblems(void)
 	return somethingUnlocked;
 }
 
+// Check for ring/time emblems obtained during regular gameplay
+UINT8 M_CheckLevelEmblemsSP(void)
+{
+	INT32 i;
+	UINT8 res;
+	UINT8 somethingUnlocked = 0;
+
+	// Update Score, Time, Rings emblems
+	for (i = 0; i < numemblems; ++i)
+	{
+		if (emblemlocations[i].type <= ET_SKIN || emblemlocations[i].type == ET_MAP || emblemlocations[i].collected || (emblemlocations[i].level != gamemap))
+			continue;
+
+		switch (emblemlocations[i].type)
+		{
+			case ET_TIME: // Requires time on map <= x
+				res = ((INT32)players[consoleplayer].realtime <= emblemlocations[i].var);
+				break;
+			case ET_NTIME: // Requires NiGHTS time on map <= x
+				res = ((INT32)players[consoleplayer].realtime <= emblemlocations[i].var);
+				break;
+			case ET_RINGS: // Requires rings on map >= x
+				res = (players[consoleplayer].rings >= emblemlocations[i].var);
+				break;
+			case ET_NGRADE: // Requires NiGHTS grade on map >= x
+				res = (P_GetGrade(players[consoleplayer].lastmarescore, gamemap, players[consoleplayer].lastmare) >= emblemlocations[i].var);
+				break;
+			default: // Score is ignored since it carries over
+				continue;
+		}
+
+		emblemlocations[i].collected = res;
+		if (res)
+			++somethingUnlocked;
+	}
+	return somethingUnlocked;
+}
+
 UINT8 M_CompletionEmblems(void) // Bah! Duplication sucks, but it's for a separate print when awarding emblems and it's sorta different enough.
 {
 	INT32 i;
diff --git a/src/m_cond.h b/src/m_cond.h
index b2c6d65e6..6da562f78 100644
--- a/src/m_cond.h
+++ b/src/m_cond.h
@@ -165,6 +165,7 @@ void M_CheckUnlockConditions(void);
 UINT8 M_UpdateUnlockablesAndExtraEmblems(void);
 void M_SilentUpdateUnlockablesAndEmblems(void);
 UINT8 M_CheckLevelEmblems(void);
+UINT8 M_CheckLevelEmblemsSP(void);
 UINT8 M_CompletionEmblems(void);
 
 // Checking unlockable status
-- 
GitLab

